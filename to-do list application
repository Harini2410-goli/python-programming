import tkinter as tk
from tkinter import messagebox
import json
import os

# File to store tasks
TASKS_FILE = 'tasks.json'

def load_tasks():
    """Load tasks from the file."""
    if os.path.exists(TASKS_FILE):
        with open(TASKS_FILE, 'r') as file:
            return json.load(file)
    return []

def save_tasks(tasks):
    """Save tasks to the file."""
    with open(TASKS_FILE, 'w') as file:
        json.dump(tasks, file, indent=4)

def add_task():
    """Add a new task."""
    title = title_entry.get()
    description = description_entry.get()
    if title and description:
        tasks = load_tasks()
        task = {
            'id': len(tasks) + 1,
            'title': title,
            'description': description,
            'completed': False
        }
        tasks.append(task)
        save_tasks(tasks)
        list_tasks()
        title_entry.delete(0, tk.END)
        description_entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Input Error", "Title and Description are required!")

def list_tasks():
    """List all tasks."""
    for widget in tasks_frame.winfo_children():
        widget.destroy()
    tasks = load_tasks()
    for task in tasks:
        status = "Completed" if task['completed'] else "Pending"
        task_frame = tk.Frame(tasks_frame)
        task_frame.pack(fill="x", pady=2)

        task_label = tk.Label(task_frame, text=f"ID: {task['id']} | {task['title']} - {task['description']} | Status: {status}")
        task_label.pack(side="left")

        complete_button = tk.Button(task_frame, text="Complete", command=lambda t=task: mark_task_completed(t['id']))
        complete_button.pack(side="right")

def mark_task_completed(task_id):
    """Mark a task as completed."""
    tasks = load_tasks()
    for task in tasks:
        if task['id'] == task_id:
            task['completed'] = True
            break
    save_tasks(tasks)
    list_tasks()

# Create the main application window
app = tk.Tk()
app.title("To-Do List")

# Create and place widgets
title_label = tk.Label(app, text="Title:")
title_label.pack()
title_entry = tk.Entry(app)
title_entry.pack()

description_label = tk.Label(app, text="Description:")
description_label.pack()
description_entry = tk.Entry(app)
description_entry.pack()

add_button = tk.Button(app, text="Add Task", command=add_task)
add_button.pack()

tasks_frame = tk.Frame(app)
tasks_frame.pack()

# Initial load of tasks
list_tasks()

# Run the application
app.mainloop()
